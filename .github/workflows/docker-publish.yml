name: Docker

on:
  push:
    branches: ['main']
    paths:
      - '.github/workflows/**'
      - 'frontends/**'
      - 'backends/**'
  pull_request:
    branches: ['main']
    paths:
      - 'frontends/**'
      - 'backends/**'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # To build multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

  frontend-build:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'frontends/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Docker metadata (frontend)
        id: meta-frontend
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend
          tags: |
            type=ref,event=branch
            type=sha,format=long

      - name: Build and push Docker image (frontend)
        id: build-and-push-frontend
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./frontends
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Sign the published Docker image (frontend)
        if: ${{ github.event_name != 'pull_request' }} && steps.build-and-push-frontend.outputs.digest
        env:
          TAGS: ${{ steps.meta-frontend.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-frontend.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

  backend-build:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'backends/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Docker metadata (backend)
        id: meta-backend
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend
          tags: |
            type=ref,event=branch
            type=sha,format=long

      - name: Build and push Docker image (backend)
        id: build-and-push-backend
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./backends
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Sign the published Docker image (backend)
        if: ${{ github.event_name != 'pull_request' }} && steps.build-and-push-backend.outputs.digest
        env:
          TAGS: ${{ steps.meta-backend.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-backend.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
